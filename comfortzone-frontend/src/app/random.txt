          <div className="mb-10">
            <h2 className="text-2xl font-semibold text-gray-800 mb-2">Add a Friend</h2>

            <div className="flex flex-col md:flex-row gap-2 md:items-center">
              <input
                type="text"
                value={friendUsername}
                onChange={(e) => setFriendUsername(e.target.value)}
                placeholder="Enter their username"
                className="flex-1 p-2 border rounded-md"
              />
              <button
                onClick={handleSendFriendRequest}
                className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"
              >
                Send Request
              </button>
            </div>
            {friendRequestStatus && (
              <p className="mt-2 text-sm text-gray-600">{friendRequestStatus}</p>
            )}
          </div>

      <div className='mb-8'>
        <div className='flex justify-between items-center mb-4'>
          <h2 className='text-2xl font-semibold text-gray-800'>My Groups</h2>
          <button
            onClick={() => setShowCreateGroupModal(true)}
            className='px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700'
          >
            Create New Group
          </button>
        </div>

        <GroupsDisplay groups={groups} />
      </div>

      <CreateGroupModal
        isOpen={showCreateGroupModal}
        onClose={() => setShowCreateGroupModal(false)}
        onCreate={handleCreateGroup}
        newGroupName={newGroupName}
        setNewGroupName={setNewGroupName}
        newGroupDescription={newGroupDescription}
        setNewGroupDescription={setNewGroupDescription}
      />

      <div className="mb-6">
        <textarea
          value={text}
          onChange={(e) => setText(e.target.value)}
          placeholder="Share your challenge progress or thoughts..."
          className="w-full p-3 rounded-md border border-gray-300 mb-2"
        />
        <input type="file" accept="image/*" onChange={handleImageUpload} className="mb-2" />

        <div className="mb-2 flex items-center space-x-3">
          <label className="text-sm text-gray-700 font-medium">Post visibility:</label>
          <select
            value={isPublic ? 'public' : 'private'}
            onChange={(e) => setIsPublic(e.target.value === 'public')}
            className="border border-gray-300 p-1 rounded-md"
          >
            <option value="public">Public</option>
            <option value="private">Private</option>
          </select>
        </div>

        <button
          onClick={handleSubmit}
          className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"
        >
          Post
        </button>
      </div>

      <div className="flex justify-center mb-6 space-x-4">
        <button
          onClick={() => setPostFilter('all')}
          className={`px-3 py-1 rounded ${postFilter === 'all' ? 'bg-blue-600 text-white' : 'bg-gray-200'}`}
        >
          All
        </button>
        <button
          onClick={() => setPostFilter('public')}
          className={`px-3 py-1 rounded ${postFilter === 'public' ? 'bg-blue-600 text-white' : 'bg-gray-200'}`}
        >
          Public
        </button>
        <button
          onClick={() => setPostFilter('private')}
          className={`px-3 py-1 rounded ${postFilter === 'private' ? 'bg-blue-600 text-white' : 'bg-gray-200'}`}
        >
          Friends Only
        </button>
      </div>



      <div className="space-y-6">
        {posts.map((post) => (
          <div
            key={post.id}
            className="border border-gray-300 rounded-lg p-4 bg-white shadow-sm"
          >
            <p className="text-gray-700 whitespace-pre-line mb-2">{post.content}</p>
            {post.image && (
              <img
                src={post.image}
                alt="Uploaded"
                className="max-h-64 rounded-md object-cover mb-2"
              />
            )}
            <p className="text-xs text-gray-500">
              Posted at {new Date(post.createdAt).toLocaleTimeString()}
            </p>
          </div>
        ))}
      </div>